<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nnbox.admin.data.mapper.BikeMaintenanceMapper">
  <resultMap id="BikeMaintenanceResultMap" type="com.nnbox.admin.data.model.BikeMaintenance">
    <id column="IDX" property="idx" />
    <result column="START_DATE" property="startDate" />
    <result column="CONTENT" property="content" />
    <result column="REASON" property="reason" />
    <result column="TOTAL_HOURS" property="totalHours" />
    <result column="WORKER" property="worker" />
    <result column="MODEL_NAME" property="modelName" />
    <result column="BIKE_NUMBER" property="bikeNumber" />
  </resultMap>
  
  <!-- custom sql -->
  <sql id="Bike_Maintenance_List_Table">
    bike_maintenance bm inner join bike b
      on bm.BIKE_IDX = b.IDX
  </sql>
  
  <sql id="Bike_Maintenance_Column_List">
    bm.IDX, bm.START_DATE, bm.CONTENT, bm.REASON, bm.TOTAL_HOURS, bm.WORKER
  </sql>
  
  <sql id="Bike_Column_List">
    b.MODEL_NAME, b.BIKE_NUMBER
  </sql>
  
  <insert id="insertSelective" parameterType="com.nnbox.admin.data.model.BikeMaintenance">
    insert into bike_maintenance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        IDX,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="bikeIdx != null">
        BIKE_IDX,
      </if>
      <if test="startDate != null">
        START_DATE,
      </if>
      <if test="endDate != null">
        END_DATE,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
      <if test="reason != null">
        REASON,
      </if>
      <if test="totalHours != null">
        TOTAL_HOURS,
      </if>
      <if test="worker != null">
        WORKER,
      </if>
      <if test="mileage != null">
        MILEAGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idx != null">
        #{idx,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bikeIdx != null">
        #{bikeIdx,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="totalHours != null">
        #{totalHours,jdbcType=INTEGER},
      </if>
      <if test="worker != null">
        #{worker,jdbcType=VARCHAR},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nnbox.admin.data.model.BikeMaintenance">
    update bike_maintenance
    <set>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bikeIdx != null">
        BIKE_IDX = #{bikeIdx,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        START_DATE = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        END_DATE = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        REASON = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="totalHours != null">
        TOTAL_HOURS = #{totalHours,jdbcType=INTEGER},
      </if>
      <if test="worker != null">
        WORKER = #{worker,jdbcType=VARCHAR},
      </if>
      <if test="mileage != null">
        MILEAGE = #{mileage,jdbcType=INTEGER},
      </if>
    </set>
    where IDX = #{idx,jdbcType=INTEGER}
  </update>

  <!-- custom sql -->
  <select id="selectBikeMaintenanceList" parameterType="com.nnbox.admin.api.bike.model.BikeMaintenanceListRequest" resultMap="BikeMaintenanceResultMap">
    select
    <include refid="Bike_Maintenance_Column_List" />,
    <include refid="Bike_Column_List" />
    from
    <include refid="Bike_Maintenance_List_Table" />
    order by bm.IDX desc
  	limit #{pageSize} offset #{limitStart}
  </select>
  
  <select id="getTotalCount" parameterType="com.nnbox.admin.api.bike.model.BikeMaintenanceListRequest" resultType="int">
    select count(*)
    from
    <include refid="Bike_Maintenance_List_Table" />
  </select>
</mapper>