<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nnbox.admin.data.mapper.OrderMapper">
  <resultMap id="OrderResultMap" type="com.nnbox.admin.data.model.Order">
    <id column="IDX" jdbcType="INTEGER" property="idx" />
    <result column="ORDER_DATE" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="FR_ID" jdbcType="VARCHAR" property="frId" />
    <result column="FR_NAME" jdbcType="VARCHAR" property="frName" />
    <result column="FR_PHONE" jdbcType="VARCHAR" property="frPhone" />
    <result column="ORDER_PRICE" jdbcType="INTEGER" property="orderPrice" />
    <result column="DELIVERY_PRICE" jdbcType="INTEGER" property="deliveryPrice" />
    <result column="BASIC_DELIVERY_PRICE" jdbcType="INTEGER" property="basicDeliveryPrice" />
    <result column="EXTRA_DELIVERY_PRICE" jdbcType="INTEGER" property="extraDeliveryPrice" />
    <result column="ORDER_STATUS" jdbcType="INTEGER" property="orderStatus" />
    <result column="DEST_ADDR1" jdbcType="VARCHAR" property="destAddr1" />
    <result column="DEST_ADDR2" jdbcType="VARCHAR" property="destAddr2" />
    <result column="DEST_ADDR3" jdbcType="VARCHAR" property="destAddr3" />
    <result column="ORDER_IDX" jdbcType="INTEGER" property="orderIdx" />
    <result column="USER_IDX" jdbcType="INTEGER" property="userIdx" />
    <result column="DELIVERY_PRICE_FEE" jdbcType="INTEGER" property="deliveryPriceFee" />
    <result column="COMPLETE_DATE" jdbcType="TIMESTAMP" property="completeDate" />
    <!-- rider -->
    <result column="RIDER_NAME" jdbcType="VARCHAR" property="riderName" />
    <result column="RIDER_PHONE" jdbcType="VARCHAR" property="riderPhone" />
    <result column="RIDER_LEVEL" jdbcType="INTEGER" property="riderLevel" />
    <result column="RIDER_STATUS" jdbcType="INTEGER" property="riderStatus" />
    <result column="RIDER_GROUP" jdbcType="INTEGER" property="riderGroup" />
    <result column="FEE_TYPE" jdbcType="INTEGER" property="feeType" />
    <!-- order payments -->
   <!--  <collection property="orderPayments" column="IDX" javaType="java.util.ArrayList"
      ofType="com.nnbox.admin.data.model.OrderPayment" select="selectOrderPaymentList" /> -->
  </resultMap>
  <sql id="Order_List_Table">
    nyamnyam_order o inner join `user` u
      on u.IDX = o.FR_IDX inner join franchise f
      on u.IDX = f.USER_IDX left outer join assign_rider a
      on o.IDX = a.ORDER_IDX inner join rider r
      on a.USER_IDX = r.USER_IDX
  </sql>
  <sql id="Order_Base_Column_List">
    o.IDX, o.ORDER_DATE, o.ORDER_PRICE, o.DELIVERY_PRICE, o.BASIC_DELIVERY_PRICE, o.EXTRA_DELIVERY_PRICE
    , o.DEST_ADDR1, o.DEST_ADDR2, o.DEST_ADDR3
  </sql>
  <sql id="Assign_Base_Column_List">
    a.DELIVERY_PRICE_FEE, a.COMPLETE_DATE
  </sql>
  <sql id="User_Base_Column_List">
    f.FR_NAME, u.PHONE as FR_PHONE
  </sql>
  <sql id="Rider_Base_Column_List">
    r.RIDER_NAME, u.PHONE as RIDER_PHONE, r.RIDER_LEVEL, r.RIDER_STATUS, r.RIDER_SETTING_GROUP_IDX as RIDER_GROUP, r.DELIVERY_PRICE_FEE_TYPE as FEE_TYPE
  </sql>
  <select id="selectRiderDeliveryList" parameterType="com.nnbox.admin.api.delivery.model.RiderDeliveryListRequest" resultMap="OrderResultMap">
    select 
      <include refid="Order_Base_Column_List" />,
      <include refid="Assign_Base_Column_List" />,
      <include refid="User_Base_Column_List" />,
      <include refid="Rider_Base_Column_List" />      
    from 
      <include refid="Order_List_Table" />
    where ORDER_STATUS = 4
   		<if test="userName != null">and r.RIDER_NAME like concat('%', #{userName}, '%')</if>
   		<if test="userPhone != null">and u.PHONE like concat('%', #{userPhone}, '%')</if>
   		<if test="frName != null">and f.FR_NAME like concat('%', #{frName}, '%')</if>
   		<if test="searchMonth != null">and o.ORDER_DATE like concat(#{searchMonth}, '%')</if>
    order by o.IDX desc
    limit #{pageSize,jdbcType=INTEGER} offset #{limitStart,jdbcType=INTEGER}
  </select>
  <select id="selectOrderCompleteListByFrIdx" parameterType="java.lang.Integer" resultMap="OrderResultMap">
    select 
      <include refid="Order_Base_Column_List" />,
      <include refid="Assign_Base_Column_List" />,
      <include refid="User_Base_Column_List" />
    from 
      <include refid="Order_List_Table" />
    where u.IDX = #{userIdx,jdbcType=INTEGER}
      and ORDER_STATUS in
        <foreach collection="orderStatuses" item="item" index="index" separator="," open="(" close=")">
          #{item}
        </foreach>
    order by o.IDX desc
    limit #{pageSize,jdbcType=INTEGER} offset #{limitStart,jdbcType=INTEGER};
  </select>
</mapper>
